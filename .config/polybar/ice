#!/usr/bin/env bash
set -e

trap error_handler ERR
error_handler() {
	echo "N/A"
	exit 0  # polybar will show errors (exit != 0) for a few seconds only, leading to a blinking entry
}

tripInfo=$(curl -s https://iceportal.de/api1/rs/tripInfo/trip|jq '.trip')
status=$(curl -s https://iceportal.de/api1/rs/status)
next=$(echo $tripInfo|jq '.stopInfo.actualNext as $next|.stops[]|select(.station.evaNr == $next)' 2>/dev/null)
if [ -z "$next" ]; then
	echo "Endstation"
	exit 0
fi
nextArrivalTs=$(echo $next|jq '.timetable.actualArrivalTime/1000')
nextArrival=$(date -d "@$nextArrivalTs" +%H:%M)
delay=$(echo $next|jq '.timetable.arrivalDelay' -r)
nextStation=$(echo $next|jq '.station.name' -r)
speed=$(echo $status|jq '.speed')
connectivity=$(echo $status | jq '.connectivity.currentState' -r)

if [ -n "$delay" ]; then
	delay=" ($delay)"
fi

case $connectivity in
  WEAK) badConnection="  ";;
  UNSTABLE) badConnection="  ";;
  *) badConnection=""
esac

echo "$badConnection$speed km/h > $nextStation $nextArrival$delay"
